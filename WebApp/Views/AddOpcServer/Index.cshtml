@using GlobalResources;
@using Microsoft.Azure.IoTSuite.Connectedfactory.WebApp.Models
@using Microsoft.Azure.IoTSuite.Connectedfactory.WebApp.Security


@model OpcSessionModel

<div class="container-fluid browser_connect_container">
    <div class="row browser_connect_header">
        <div class="browser_connect_header_text overflow">@Strings.BrowserSelectNewServer</div>
    </div>
    <div class="row browser_top_container">
        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
            @if (PermsChecker.HasPermission(Permission.AddOpcServer))
            {
                <div class="row browser_select_connect_container">
                    @using (Ajax.BeginForm("Connect", "Browser", new AjaxOptions { OnSuccess = "onSuccess", OnFailure = "onFailure" }))
                    {
                        @Html.AntiForgeryToken();
                        <div class="row browser_connect_selection_label">@Html.Raw(Strings.BrowserEnterOwn)</div>
                        <div class="browser_connect_selection_textbox">
                            @Html.TextBox("endpointUrl", null, new { style = "width:100%;" })
                        </div>
                        <div class="row browser_browse_connect_button">
                            <input id="connectAddOpcServerButton" class="btn btn-default btn_browser" onclick="return openConnectContextPanel();" type="submit" value=@Strings.BrowserConnect>
                        </div>
                    }
                </div>
            }
            @if (PermsChecker.HasPermission(Permission.DownloadCertificate))
            { 
                <div class="row browser_select_connect_container">
                    @using (Html.BeginForm("Download", "AddOpcServer", FormMethod.Get))
                    {
                        @Html.AntiForgeryToken();
                        <div class="row browser_connect_selection_label">@Strings.BrowserDownloadText</div>
                        <div class="row browser_browse_connect_button">
                            <input class="btn btn-default btn_browser" type="submit" value="@Strings.BrowserDownload">
                        </div>
                    }
                </div>
            }
        </div>
        <div id="browserImage" class="browser_image_container  col-xs-12 col-sm-12 col-md-5 col-lg-5">
            <img class="img-responsive" src="~/Content/img/packing_station.png" />
        </div>
    </div>

    @if (PermsChecker.HasPermission(Permission.AddOpcServer))
    {
        <div id="addOpcServerContextpanel" class="overlay">
            <div class="dashboard_contextpanel_header">
                <div id="addOpcServerContextpanelHeader" class="dashboard_contextpanel_header_text">@Strings.BrowserSecurityWarning</div>
            </div>
            <a href="#" class="closebtn" onclick="closeAddOpcServerContextPanel();"><img class="dashboard-cancel-icon" src="~/Content/img/cancel.svg" hidden></a>
            <div id="addOpcServerBodyContextPanel" class="browser_error_details_container">
                <div class="row browser_error_details_line_header">
                    <span class="glyphicon glyphicon-alert"></span>
                    <span class="browser_error_details_label">@Strings.BrowserTrustHeader</span>
                </div>
                <div class="row browser_error_details_line">
                    <span class="browser_error_details_info_black">@Strings.BrowserTrust</span>
                </div>
            </div>
            <div id="addOpcServerErrorContextPanel" class="overlay-content">
                <div class="browser_error_contextpanel_container">
                    <span class="browser_error_contextpanel_header">@Strings.BrowserErrorMessage</span>
                    <div id="addOpcServerErrorHeader" class="browser_error_contextpanel_message"></div>
                </div>
            </div>

            <div id="waitingForConnect" class="browser_error_details_container">@Strings.BrowserConnecting</div>
            <div id="connectNewOpcServerLoader" class="loader"></div>

            <div id="proceedButton" class="dashboard_contextpanel_select_filter_button">
                @using (Ajax.BeginForm("ConnectWithTrust", "Browser", new AjaxOptions { OnSuccess = "onSuccess", OnFailure = "onFailure" }))
                {
                    @Html.AntiForgeryToken();
                    @Html.HiddenFor(model => model.EndpointUrl, new { id = "hiddenEndpointUrl" })
                    <input class="btn btn-default btn_dashboard_contextpanel" type="submit" onclick="connecting();" value="@Strings.BrowserTrustButton">
                }
            </div>
            <div id="cancelButton" class="dashboard_contextpanel_clear_filter_button">
                @using (Html.BeginForm("Disconnect", "Browser"))
                {
                    @Html.AntiForgeryToken();
                    <button class="btn btn-default btn_dashboard_contextpanel" type="submit" onclick="closeAddOpcServerContextPanel();" value="@Strings.BrowserDontTrustButton">
                        <img class="dashboard-cancel-icon" src="~/Content/img/cancelX.svg">
                        @Strings.BrowserDontTrustButton
                    </button>
                }
            </div>
        </div>
    }
</div>

<script>
    $(document).ready(function () {
        $("#addOpcServerContextpanel").addClass("overlay-close").removeClass("overlay-right-open");
        $("#connectAddOpcServerButton").prop("disabled", false);

        $("#endpointUrl").autocomplete({});
    });

    var addOpcServerDisconnect = false;
    var title = "@Strings.TitleAddOpcServer";

    function onSuccess(sessionModel) {
        $("#hiddenEndpointUrl").val(sessionModel.EndpointUrl);
        $("#connectNewOpcServerLoader").hide();

        if (sessionModel.ErrorHeader == "@Strings.UntrustedCertificate") {
            $("#waitingForConnect").hide();
            $("#addOpcServerBodyContextPanel").show();
            $("#addOpcServerContextpanelHeader").html("@Strings.BrowserSecurityWarning");
            $("#addOpcServerErrorContextPanel").hide();
            $("#proceedButton").show();
            $("#cancelButton").show();
        } else if (sessionModel.ErrorHeader != null) {
            $("#connectNewOpcServerLoader").hide();
            $("#waitingForConnect").hide();
            $("#addOpcServerContextpanelHeader").html("@Strings.Error");
            $("#addOpcServerErrorContextPanel").show();
            $("#addOpcServerErrorHeader").html(sessionModel.ErrorHeader);
            $("#addOpcServerErrorMessage").html(sessionModel.ErrorMessage);
            addOpcServerDisconnect = true;
        } else {
            var baseUrl = '@Url.Content("~")';
            window.location.href = baseUrl + "Browser/Index";
        }
    }

    function onFailure(response) {
        $("#connectNewOpcServerLoader").hide();
        $("#waitingForConnect").hide();
        $("#addOpcServerContextpanelHeader").html("@Strings.Error");
        $("#addOpcServerErrorContextPanel").show();
        $("#addOpcServerErrorHeader").html(sessionModel.ErrorHeader);
        $("#addOpcServerErrorMessage").html(sessionModel.ErrorMessage);
        addOpcServerDisconnect = true;
    }

    function openConnectContextPanel() {
        if ($("#endpointUrl").val() == "") {
            return false;
        }

        $("#addOpcServerBodyContextPanel").hide();
        $("#addOpcServerErrorContextPanel").hide();
        $("#addOpcServerContextpanel").removeClass("overlay-close").addClass("overlay-right-open");
        $("#addOpcServerContextpanelHeader").html("@Strings.BrowserConnect");
        $("#proceedButton").hide();
        $("#cancelButton").hide();
        $("#waitingForConnect").show();
        $(".dashboard-cancel-icon").show();
        return true;
    }

    $('form').submit(function () {
        $("#connectAddOpcServerButton").prop("disabled", true);
    })

    function connecting() {
        $("#addOpcServerContextpanelHeader").html("@Strings.BrowserConnect");
        $("#addOpcServerBodyContextPanel").hide();
        $("#proceedButton").hide();
        $("#cancelButton").hide();
        $("#waitingForConnect").show();
        $("#connectNewOpcServerLoader").show();
    }

    function closeAddOpcServerContextPanel() {
        $("#addOpcServerContextpanel").addClass("overlay-close").removeClass("overlay-right-open");

        if (addOpcServerDisconnect == true) {
            $.post({
                url: "/Browser/Disconnect",
                data: { __RequestVerificationToken: $('[name=__RequestVerificationToken]').val(), backUrl: window.location.href },
                success: function onSuccess(response) {
                },
                error: function (response) {
                    console.error("error connecting to an OPC UA server: ", response.d, response.responseText);
                }
            });
        }
        $("#connectAddOpcServerButton").prop("disabled", false);
        addOpcServerDisconnect = false;
    }

</script>
