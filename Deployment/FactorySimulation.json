{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "suiteName": {
            "type": "string",
            "metadata": {
                "description": "The name of the suite"
            }
        },
        "suiteType": {
            "type": "string",
            "metadata": {
                "description": "The suite type for resource tracking"
            }
        },
        "storageName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storageAccount"
            }
        },
        "storageSkuName": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "The storage Sku name"
            }
        },
        "storageKind": {
            "type": "string",
            "defaultValue": "Storage",
            "metadata": {
                "description": "The kind of the storage account."
            }
        },
        "storageEndpointSuffix": {
            "type": "string",
            "metadata": {
                "description": "Suffix added to Azure Storage hostname (examples: core.windows.net, core.cloudapi.de)"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D1_v2",
            "metadata": {
                "description": "The VM size used for the virtual machine."
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "16.04.0-LTS",
            "allowedValues": [
                "12.04.5-LTS",
                "14.04.5-LTS",
                "15.10",
                "16.04.0-LTS"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "initSimulationUri": {
            "type": "string",
            "defaultValue": "https://iotsuitestorage.blob.core.windows.net/packages/Connectedfactory/current/initsimulation?st=2017-06-01T06%3A55%3A00Z&se=2022-06-02T06%3A55%3A00Z&sp=rl&sv=2015-12-11&sr=b&sig=2xGMM2fTF%2BfKgl1lLnlhln5j9U7AzlcYoxmKozFk56g%3D",
            "metadata": {
                "description": "URI containing script to init the VM."
            }
        },
        "simulationUri": {
            "type": "string",
            "defaultValue": "https://iotsuitestorage.blob.core.windows.net/packages/Connectedfactory/current/simulation?st=2017-06-01T06%3A55%3A00Z&se=2022-06-02T06%3A55%3A00Z&sp=rl&sv=2015-12-11&sr=b&sig=c6b7OKjqDwO6Ko%2FxfM5AY%2Fr%2F04wHHt4YJFG5gQ8%2FiJQ%3D",
            "metadata": {
                "description": "URI containing the archive with all files for the simulation."
            }
        },
        "iotHubOwnerConnectionString": {
            "type": "string",
            "defaultValue": "unknown",
            "metadata": {
                "description": "IoTHub owner connection string for IoTHub."
            }
        },
        "keyVaultId": {
            "type": "string",
            "defaultValue": "unknown",
            "metadata": {
                "description": "Name of the KeyVault."
            }
        },
        "keyVaultSecretUrl": {
            "type": "string",
            "defaultValue": "unknown",
            "metadata": {
                "description": "URL of the secret to deploy to the VM."
            }
        },
        "uaSecretThumbprint": {
            "type": "string",
            "defaultValue": "unknown",
            "metadata": {
                "description": "Thumbprint of the secret for the OPC UA communciation."
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "storageVersion": "2016-01-01",
        "computeVersion": "2015-08-01",
        "computeVmVersion": "2017-03-30",
        "netVersion": "2016-12-01",
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "OSDiskName": "osdiskfordockersimple",
        "nicName": "[parameters('suiteName')]",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "vmStorageAccountContainerName": "vhds",
        "vmName": "[parameters('suiteName')]",
        "virtualNetworkName": "[parameters('suiteName')]",
        "networkSecurityGroup": "[parameters('suiteName')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageName')]",
            "apiVersion": "[variables('storageVersion')]",
            "location": "[variables('location')]",
            "tags": {
                "IotSuiteType": "[parameters('suiteType')]"
            },
            "kind": "[parameters('storageKind')]",
            "sku": {
                "name": "[parameters('storageSkuName')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroup')]",
            "apiVersion": "[variables('netVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AmqpsOut",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5671",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "MqttsOut",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8883",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 115,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "TlsOut",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "[variables('netVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "[variables('netVersion')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networkSecurityGroup'))]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "apiVersion": "[variables('computeVmVersion')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', parameters('storageName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[parameters('keyVaultId')]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('keyVaultSecretUrl')]"
                                }
                            ]
                        }
                    ]
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk1",
                        "vhd": {
                            "uri": "[concat('http://',parameters('storageName'),'.blob.',parameters('storageEndpointSuffix'),'/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageName')), '2016-01-01').primaryEndpoints.blob)]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'), '/', 'scriptextensions')]",
            "apiVersion": "[variables('computeVmVersion')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[parameters('initSimulationUri')]",
                        "[parameters('simulationUri')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('sh initsimulation ', '\"', parameters('iotHubOwnerConnectionString'), '\" ', '\"', parameters('uaSecretThumbprint'), '\"' )]"
                }
            }
        }
    ]
}
